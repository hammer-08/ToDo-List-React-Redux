{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\TaskListContainer.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport TaskListComponent from './components/TaskListComponent';\nimport { submitCreation, submitEdition, makeDone } from './TaskListLogic';\n\nclass TaskListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitCreation = text => {\n      this.props.submitCreation({\n        desc: text,\n        isDone: false\n      });\n    };\n\n    this.handleSubmitEdit = (index, text) => {\n      const taskListEdited = [...this.props.taskList];\n      taskListEdited[index].desc = text;\n      this.props.submitEdition(taskListEdited);\n    };\n\n    this.handleDone = index => {\n      const taskListEdited = [...this.props.taskList];\n      taskListEdited[index].isDone = true;\n      this.props.makeDone(taskListEdited);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'task-list-component',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TaskListComponent, {\n      handlerSubmitCreationClick: this.handleSubmitCreation,\n      handlerSubmitEditClick: this.handleSubmitEdit,\n      handlerDoneClick: this.handleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    taskList: state.taskList.taskList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    submitCreation: value => dispatch(submitCreation(value)),\n    submitEdition: value => dispatch(submitEdition(value)),\n    makeDone: value => dispatch(makeDone(value))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);","map":{"version":3,"sources":["C:\\Users\\MiniTower\\Documents\\Workspace\\TODOList+Score\\frontend\\src\\components\\TaskListWidget\\TaskListContainer.tsx"],"names":["React","connect","TaskListComponent","submitCreation","submitEdition","makeDone","TaskListContainer","Component","constructor","props","handleSubmitCreation","text","desc","isDone","handleSubmitEdit","index","taskListEdited","taskList","handleDone","render","mapStateToProps","state","mapDispatchToProps","dispatch","value"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAIA,SAEIC,cAFJ,EAGIC,aAHJ,EAIIC,QAJJ,QAKO,iBALP;;AAsBA,MAAMC,iBAAN,SAAgCN,KAAK,CAACO,SAAtC,CAAuD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAI1BC,oBAJ0B,GAIFC,IAAD,IAAkB;AACrC,WAAKF,KAAL,CAAWN,cAAX,CAA0B;AAAES,QAAAA,IAAI,EAAED,IAAR;AAAcE,QAAAA,MAAM,EAAE;AAAtB,OAA1B;AACH,KANyB;;AAAA,SAQ1BC,gBAR0B,GAQP,CAACC,KAAD,EAAgBJ,IAAhB,KAAiC;AAChD,YAAMK,cAAc,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWQ,QAAf,CAAvB;AACAD,MAAAA,cAAc,CAACD,KAAD,CAAd,CAAsBH,IAAtB,GAA6BD,IAA7B;AACA,WAAKF,KAAL,CAAWL,aAAX,CAAyBY,cAAzB;AACH,KAZyB;;AAAA,SAc1BE,UAd0B,GAcZH,KAAD,IAAmB;AAC5B,YAAMC,cAAc,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWQ,QAAf,CAAvB;AACAD,MAAAA,cAAc,CAACD,KAAD,CAAd,CAAsBF,MAAtB,GAA+B,IAA/B;AACA,WAAKJ,KAAL,CAAWJ,QAAX,CAAoBW,cAApB;AACH,KAlByB;AAEzB;;AAkBDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AACI,MAAA,0BAA0B,EAAE,KAAKT,oBADrC;AAEI,MAAA,sBAAsB,EAAE,KAAKI,gBAFjC;AAGI,MAAA,gBAAgB,EAAE,KAAKI,UAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AA/BkD;;AAkCvD,SAASE,eAAT,CAAyBC,KAAzB,EAA2C;AACvC,SAAO;AACHJ,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeA;AADtB,GAAP;AAGH;;AAED,SAASK,kBAAT,CAA4BC,QAA5B,EAAgF;AAC5E,SAAO;AACHpB,IAAAA,cAAc,EAAGqB,KAAD,IAAiBD,QAAQ,CAACpB,cAAc,CAACqB,KAAD,CAAf,CADtC;AAEHpB,IAAAA,aAAa,EAAGoB,KAAD,IAAmBD,QAAQ,CAACnB,aAAa,CAACoB,KAAD,CAAd,CAFvC;AAGHnB,IAAAA,QAAQ,EAAGmB,KAAD,IAAmBD,QAAQ,CAAClB,QAAQ,CAACmB,KAAD,CAAT;AAHlC,GAAP;AAKH;;AAED,eAAevB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,iBAA7C,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskListComponent from './components/TaskListComponent';\r\nimport { StateType } from '../../types';\r\nimport { Dispatch } from 'redux';\r\nimport { Task } from '../../ApiModels';\r\nimport {\r\n    TaskListActions,\r\n    submitCreation,\r\n    submitEdition,\r\n    makeDone\r\n} from './TaskListLogic';\r\n\r\ninterface State {\r\n}\r\n\r\ninterface StateToProps {\r\n    taskList: Task[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    submitCreation(value: Task): void;\r\n    submitEdition(value: Task[]): void;\r\n    makeDone(value: Task[]): void;\r\n}\r\n\r\ntype Props = StateToProps & DispatchProps;\r\n\r\nclass TaskListContainer extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmitCreation = (text: string) => {\r\n        this.props.submitCreation({ desc: text, isDone: false });\r\n    }\r\n\r\n    handleSubmitEdit = (index: number, text: string) => {\r\n        const taskListEdited = [...this.props.taskList];\r\n        taskListEdited[index].desc = text;\r\n        this.props.submitEdition(taskListEdited);\r\n    }\r\n\r\n    handleDone = (index: number) => {\r\n        const taskListEdited = [...this.props.taskList];\r\n        taskListEdited[index].isDone = true\r\n        this.props.makeDone(taskListEdited);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'task-list-component'}>\r\n                <TaskListComponent\r\n                    handlerSubmitCreationClick={this.handleSubmitCreation}\r\n                    handlerSubmitEditClick={this.handleSubmitEdit}\r\n                    handlerDoneClick={this.handleDone}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateType) {\r\n    return {\r\n        taskList: state.taskList.taskList\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<TaskListActions>): DispatchProps {\r\n    return {\r\n        submitCreation: (value: Task) => dispatch(submitCreation(value)),\r\n        submitEdition: (value: Task[]) => dispatch(submitEdition(value)),\r\n        makeDone: (value: Task[]) => dispatch(makeDone(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);"]},"metadata":{},"sourceType":"module"}