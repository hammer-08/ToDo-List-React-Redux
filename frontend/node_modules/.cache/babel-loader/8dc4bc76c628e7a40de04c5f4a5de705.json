{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { apiFetch, apiPost } from '../../ApiFetch';\nexport const taskListState = {\n  taskList: []\n};\n/*export function submitCreation(value: string): TaskListActions {\r\n    return { type: 'TASK_LIST/SUBMIT_CREATION', value: { value } };\r\n}*/\n\nexport function setTasks(value) {\n  return {\n    type: 'TASK_LIST/SET_TASKS',\n    value: {\n      value\n    }\n  };\n}\nexport function submitEdition(value) {\n  return {\n    type: 'TASK_LIST/SUBMIT_EDITION',\n    value: {\n      value\n    }\n  };\n}\nexport function makeDone(value) {\n  return {\n    type: 'TASK_LIST/MAKE_DONE',\n    value: {\n      value\n    }\n  };\n}\nexport function taskListReducer(state = taskListState, action) {\n  switch (action.type) {\n    case 'TASK_LIST/SUBMIT_CREATION':\n      return _objectSpread({}, state, {\n        taskList: state.taskList.concat(action.value.value)\n      });\n\n    case 'TASK_LIST/MAKE_DONE':\n      return _objectSpread({}, state, {\n        taskList: [...action.value.value]\n      });\n\n    case 'TASK_LIST/SUBMIT_EDITION':\n      return _objectSpread({}, state, {\n        taskList: [...action.value.value]\n      });\n\n    case 'TASK_LIST/SET_TASKS':\n      return _objectSpread({}, state, {\n        taskList: [...action.value.value]\n      });\n\n    default:\n      return state;\n  }\n}\nexport async function findAllTasks() {\n  const response = await apiFetch('api/findAllTasks');\n  const data = await response.json();\n  const tasks = data;\n  return tasks;\n}\nexport async function addTask(request) {\n  const response = await apiPost('/addTask', request);\n  return await response.json();\n}\nexport async function editTask(request) {\n  const response = await apiPost('/editTask', request);\n  return await response.json();\n}\nexport async function deleteTask(taskId) {\n  const response = await apiPost('/deleteTask', taskId);\n  return await response.json();\n}","map":{"version":3,"sources":["C:\\Users\\MiniTower\\Documents\\Workspace\\TODOList+Score\\frontend\\src\\components\\TaskListWidget\\TaskListLogic.tsx"],"names":["apiFetch","apiPost","taskListState","taskList","setTasks","value","type","submitEdition","makeDone","taskListReducer","state","action","concat","findAllTasks","response","data","json","tasks","addTask","request","editTask","deleteTask","taskId"],"mappings":";AAEA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;AAMA,OAAO,MAAMC,aAA4B,GAAG;AACxCC,EAAAA,QAAQ,EAAE;AAD8B,CAArC;AAIP;;;;AAIA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAuD;AAC1D,SAAO;AAAEC,IAAAA,IAAI,EAAE,qBAAR;AAA+BD,IAAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF;AAAtC,GAAP;AACH;AAED,OAAO,SAASE,aAAT,CAAuBF,KAAvB,EAA4D;AAC/D,SAAO;AAAEC,IAAAA,IAAI,EAAE,0BAAR;AAAoCD,IAAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF;AAA3C,GAAP;AACH;AAED,OAAO,SAASG,QAAT,CAAkBH,KAAlB,EAAuD;AAC1D,SAAO;AAAEC,IAAAA,IAAI,EAAE,qBAAR;AAA+BD,IAAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF;AAAtC,GAAP;AACH;AAMD,OAAO,SAASI,eAAT,CACHC,KAAoB,GAAGR,aADpB,EAEHS,MAFG,EAEqC;AACxC,UAAQA,MAAM,CAACL,IAAf;AACI,SAAK,2BAAL;AAAkC,+BAC3BI,KAD2B;AAE9BP,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeS,MAAf,CAAsBD,MAAM,CAACN,KAAP,CAAaA,KAAnC;AAFoB;;AAIlC,SAAK,qBAAL;AAA4B,+BACrBK,KADqB;AAExBP,QAAAA,QAAQ,EAAE,CAAC,GAAGQ,MAAM,CAACN,KAAP,CAAaA,KAAjB;AAFc;;AAI5B,SAAK,0BAAL;AAAiC,+BAC1BK,KAD0B;AAE7BP,QAAAA,QAAQ,EAAE,CAAC,GAAGQ,MAAM,CAACN,KAAP,CAAaA,KAAjB;AAFmB;;AAIjC,SAAK,qBAAL;AAA4B,+BACrBK,KADqB;AAExBP,QAAAA,QAAQ,EAAE,CAAC,GAAGQ,MAAM,CAACN,KAAP,CAAaA,KAAjB;AAFc;;AAI5B;AAAS,aAAOK,KAAP;AAjBb;AAmBH;AAED,OAAO,eAAeG,YAAf,GAAoD;AACvD,QAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAAC,kBAAD,CAA/B;AACA,QAAMe,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,QAAMC,KAAK,GAAGF,IAAd;AACA,SAAOE,KAAP;AACH;AAED,OAAO,eAAeC,OAAf,CAAuBC,OAAvB,EAA4D;AAC/D,QAAML,QAAQ,GAAG,MAAMb,OAAO,CAAC,UAAD,EAAakB,OAAb,CAA9B;AACA,SAAO,MAAML,QAAQ,CAACE,IAAT,EAAb;AACH;AAED,OAAO,eAAeI,QAAf,CAAwBD,OAAxB,EAA6D;AAChE,QAAML,QAAQ,GAAG,MAAMb,OAAO,CAAC,WAAD,EAAckB,OAAd,CAA9B;AACA,SAAO,MAAML,QAAQ,CAACE,IAAT,EAAb;AACH;AAED,OAAO,eAAeK,UAAf,CAA0BC,MAA1B,EAA2D;AAC9D,QAAMR,QAAQ,GAAG,MAAMb,OAAO,CAAC,aAAD,EAAgBqB,MAAhB,CAA9B;AACA,SAAO,MAAMR,QAAQ,CAACE,IAAT,EAAb;AACH","sourcesContent":["import { Act } from '../../types';\r\nimport { TaskModel } from '../../ApiModels';\r\nimport { apiFetch, apiPost } from '../../ApiFetch';\r\n\r\nexport interface TaskListState {\r\n    taskList: TaskModel[];\r\n}\r\n\r\nexport const taskListState: TaskListState = {\r\n    taskList: []\r\n};\r\n\r\n/*export function submitCreation(value: string): TaskListActions {\r\n    return { type: 'TASK_LIST/SUBMIT_CREATION', value: { value } };\r\n}*/\r\n\r\nexport function setTasks(value: TaskModel[]): TaskListActions {\r\n    return { type: 'TASK_LIST/SET_TASKS', value: { value } };\r\n}\r\n\r\nexport function submitEdition(value: TaskModel[]): TaskListActions {\r\n    return { type: 'TASK_LIST/SUBMIT_EDITION', value: { value } };\r\n}\r\n\r\nexport function makeDone(value: TaskModel[]): TaskListActions {\r\n    return { type: 'TASK_LIST/MAKE_DONE', value: { value } };\r\n}\r\n\r\nexport type TaskListActions = Act<'TASK_LIST/SUBMIT_CREATION', { value: TaskModel }> |\r\n    Act<'TASK_LIST/MAKE_DONE', { value: TaskModel[] }> | Act<'TASK_LIST/SUBMIT_EDITION', { value: TaskModel[] }>\r\n        | Act<'TASK_LIST/SET_TASKS', { value: TaskModel[] }>;\r\n\r\nexport function taskListReducer(\r\n    state: TaskListState = taskListState,\r\n    action: TaskListActions): TaskListState {\r\n    switch (action.type) {\r\n        case 'TASK_LIST/SUBMIT_CREATION': return {\r\n            ...state,\r\n            taskList: state.taskList.concat(action.value.value)\r\n        };\r\n        case 'TASK_LIST/MAKE_DONE': return {\r\n            ...state,\r\n            taskList: [...action.value.value]\r\n        };\r\n        case 'TASK_LIST/SUBMIT_EDITION': return {\r\n            ...state,\r\n            taskList: [...action.value.value]\r\n        };\r\n        case 'TASK_LIST/SET_TASKS': return {\r\n            ...state,\r\n            taskList: [...action.value.value]\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport async function findAllTasks(): Promise<TaskModel[]> {\r\n    const response = await apiFetch('api/findAllTasks');\r\n    const data = await response.json();\r\n    const tasks = data as TaskModel[];\r\n    return tasks;\r\n}\r\n\r\nexport async function addTask(request: TaskModel): Promise<String> {\r\n    const response = await apiPost('/addTask', request);\r\n    return await response.json();\r\n}\r\n\r\nexport async function editTask(request: TaskModel): Promise<string> {\r\n    const response = await apiPost('/editTask', request);\r\n    return await response.json();\r\n}\r\n\r\nexport async function deleteTask(taskId: string): Promise<string> {\r\n    const response = await apiPost('/deleteTask', taskId);\r\n    return await response.json();\r\n}"]},"metadata":{},"sourceType":"module"}