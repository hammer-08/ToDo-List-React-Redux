{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\TaskListContainer.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport TaskListComponent from './components/TaskListComponent';\nimport { setTasks, editTask, findAllTasks } from './TaskListLogic';\nimport uuid from 'uuid';\nimport moment from 'moment';\n\nclass TaskListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmitCreation = text => {\n      const task = {\n        id: uuid(),\n        done: false,\n        creationDateAndTime: moment().toString(),\n        creationTimestamp: moment().utc.toString(),\n        desc: text\n      };\n      editTask(task);\n    };\n\n    this.handleSubmitEdition = (id, text) => {\n      const oldTask = this.props.taskList.find(e => e.id === id);\n\n      if (!oldTask) {\n        return;\n      }\n\n      const newTask = _objectSpread({}, oldTask, {\n        desc: text\n      });\n\n      editTask(newTask);\n    };\n\n    this.handleDone = id => {\n      const oldTask = this.props.taskList.find(e => e.id === id);\n\n      if (!oldTask) {\n        return;\n      }\n\n      const doneTask = _objectSpread({}, oldTask, {\n        done: true\n      });\n\n      editTask(doneTask);\n    };\n  }\n\n  async componentWillMount() {\n    const tasks = await findAllTasks();\n    alert(tasks.length);\n    setTasks(tasks);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'task-list-component',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TaskListComponent, {\n      handlerSubmitCreationClick: this.handleSubmitCreation,\n      handlerSubmitEditClick: this.handleSubmitEdition,\n      handlerDoneClick: this.handleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    taskList: state.taskList.taskList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTasks: value => dispatch(setTasks(value))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);","map":{"version":3,"sources":["C:\\Users\\MiniTower\\Documents\\Workspace\\TODOList+Score\\frontend\\src\\components\\TaskListWidget\\TaskListContainer.tsx"],"names":["React","connect","TaskListComponent","setTasks","editTask","findAllTasks","uuid","moment","TaskListContainer","Component","handleSubmitCreation","text","task","id","done","creationDateAndTime","toString","creationTimestamp","utc","desc","handleSubmitEdition","oldTask","props","taskList","find","e","newTask","handleDone","doneTask","componentWillMount","tasks","alert","length","render","mapStateToProps","state","mapDispatchToProps","dispatch","value"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAIA,SAEIC,QAFJ,EAGIC,QAHJ,EAIIC,YAJJ,QAKO,iBALP;AAMA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAYA,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAuD;AAAA;AAAA;;AAAA,SAEnDC,oBAFmD,GAE3BC,IAAD,IAAkB;AACrC,YAAMC,IAAe,GAAG;AACpBC,QAAAA,EAAE,EAAEP,IAAI,EADY;AAEpBQ,QAAAA,IAAI,EAAE,KAFc;AAGpBC,QAAAA,mBAAmB,EAAER,MAAM,GAAGS,QAAT,EAHD;AAIpBC,QAAAA,iBAAiB,EAAEV,MAAM,GAAGW,GAAT,CAAaF,QAAb,EAJC;AAKpBG,QAAAA,IAAI,EAAER;AALc,OAAxB;AAOAP,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACH,KAXkD;;AAAA,SAanDQ,mBAbmD,GAa7B,CAACP,EAAD,EAAaF,IAAb,KAA8B;AAChD,YAAMU,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASA,EAAvC,CAAhB;;AAEA,UAAI,CAACQ,OAAL,EAAc;AACV;AACH;;AAED,YAAMK,OAAkB,qBACjBL,OADiB;AAEpBF,QAAAA,IAAI,EAAER;AAFc,QAAxB;;AAIAP,MAAAA,QAAQ,CAACsB,OAAD,CAAR;AACH,KAzBkD;;AAAA,SA2BnDC,UA3BmD,GA2BrCd,EAAD,IAAgB;AACzB,YAAMQ,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASA,EAAvC,CAAhB;;AAEA,UAAI,CAACQ,OAAL,EAAc;AACV;AACH;;AAED,YAAMO,QAAmB,qBAClBP,OADkB;AAErBP,QAAAA,IAAI,EAAE;AAFe,QAAzB;;AAIAV,MAAAA,QAAQ,CAACwB,QAAD,CAAR;AACH,KAvCkD;AAAA;;AAyCnD,QAAMC,kBAAN,GAA2B;AACvB,UAAMC,KAAK,GAAG,MAAMzB,YAAY,EAAhC;AACA0B,IAAAA,KAAK,CAACD,KAAK,CAACE,MAAP,CAAL;AACA7B,IAAAA,QAAQ,CAAC2B,KAAD,CAAR;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AACI,MAAA,0BAA0B,EAAE,KAAKvB,oBADrC;AAEI,MAAA,sBAAsB,EAAE,KAAKU,mBAFjC;AAGI,MAAA,gBAAgB,EAAE,KAAKO,UAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AAzDkD;;AA4DvD,SAASO,eAAT,CAAyBC,KAAzB,EAA2C;AACvC,SAAO;AACHZ,IAAAA,QAAQ,EAAEY,KAAK,CAACZ,QAAN,CAAeA;AADtB,GAAP;AAGH;;AAED,SAASa,kBAAT,CAA4BC,QAA5B,EAAgF;AAC5E,SAAO;AACHlC,IAAAA,QAAQ,EAAGmC,KAAD,IAAwBD,QAAQ,CAAClC,QAAQ,CAACmC,KAAD,CAAT;AADvC,GAAP;AAGH;;AAED,eAAerC,OAAO,CAACiC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C5B,iBAA7C,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskListComponent from './components/TaskListComponent';\r\nimport { StateType } from '../../types';\r\nimport { Dispatch } from 'redux';\r\nimport { TaskModel } from '../../ApiModels';\r\nimport {\r\n    TaskListActions,\r\n    setTasks,\r\n    editTask,\r\n    findAllTasks\r\n} from './TaskListLogic';\r\nimport uuid from 'uuid';\r\nimport moment from 'moment';\r\n\r\ninterface StateToProps {\r\n    taskList: TaskModel[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    setTasks(value: TaskModel[]): void;\r\n}\r\n\r\ntype Props = StateToProps & DispatchProps;\r\n\r\nclass TaskListContainer extends React.Component<Props> {\r\n\r\n    handleSubmitCreation = (text: string) => {\r\n        const task: TaskModel = {\r\n            id: uuid(),\r\n            done: false,\r\n            creationDateAndTime: moment().toString(),\r\n            creationTimestamp: moment().utc.toString(),\r\n            desc: text\r\n        }\r\n        editTask(task);\r\n    }\r\n\r\n    handleSubmitEdition = (id: string, text: string) => {\r\n        const oldTask = this.props.taskList.find(e => e.id === id);\r\n\r\n        if (!oldTask) {\r\n            return;\r\n        }\r\n\r\n        const newTask: TaskModel = {\r\n            ...oldTask,\r\n            desc: text\r\n        }\r\n        editTask(newTask);\r\n    }\r\n\r\n    handleDone = (id: string) => {\r\n        const oldTask = this.props.taskList.find(e => e.id === id);\r\n\r\n        if (!oldTask) {\r\n            return;\r\n        }\r\n\r\n        const doneTask: TaskModel = {\r\n            ...oldTask,\r\n            done: true\r\n        }\r\n        editTask(doneTask);\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const tasks = await findAllTasks();\r\n        alert(tasks.length);\r\n        setTasks(tasks);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'task-list-component'}>\r\n                <TaskListComponent\r\n                    handlerSubmitCreationClick={this.handleSubmitCreation}\r\n                    handlerSubmitEditClick={this.handleSubmitEdition}\r\n                    handlerDoneClick={this.handleDone}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateType) {\r\n    return {\r\n        taskList: state.taskList.taskList\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<TaskListActions>): DispatchProps {\r\n    return {\r\n        setTasks: (value: TaskModel[]) => dispatch(setTasks(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);"]},"metadata":{},"sourceType":"module"}