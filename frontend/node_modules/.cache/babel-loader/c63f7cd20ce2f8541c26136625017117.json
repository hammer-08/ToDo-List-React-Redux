{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\TaskListContainer.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport TaskListComponent from './components/TaskListComponent';\nimport { //submitCreation,\nsubmitEdition, makeDone, addTask, editTask, findAllTasks2 } from './TaskListLogic';\nimport uuid from 'uuid';\n\nclass TaskListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitCreation = text => {\n      //this.props.submitCreation(text);\n      const task = {\n        id: uuid(),\n        done: false,\n        creationDateAndTime: '',\n        creationTimestamp: '',\n        desc: text\n      };\n      addTask(task);\n    };\n\n    this.handleSubmitEdition = (id, text) => {\n      const oldTask = this.props.taskList.find(e => e.id === id);\n\n      if (!oldTask) {\n        return;\n      }\n\n      const newTask = _objectSpread({}, oldTask, {\n        desc: text\n      });\n\n      editTask(newTask);\n      /*const taskListEdited = [...this.props.taskList];\r\n      taskListEdited[index].desc = text;\r\n      this.props.submitEdition(taskListEdited);*/\n    };\n\n    this.handleDone = id => {\n      const oldTask = this.props.taskList.find(e => e.id === id);\n\n      if (!oldTask) {\n        return;\n      }\n\n      const newTask = _objectSpread({}, oldTask, {\n        done: true\n      });\n\n      editTask(newTask);\n      /*const taskListEdited = [...this.props.taskList];\r\n      taskListEdited[index].done = true\r\n      this.props.makeDone(taskListEdited);*/\n    };\n\n    this.state = {\n      task: findAllTasks2.length\n    };\n  }\n\n  render() {\n    alert(this.state.task);\n    return React.createElement(\"div\", {\n      className: 'task-list-component',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TaskListComponent, {\n      handlerSubmitCreationClick: this.handleSubmitCreation,\n      handlerSubmitEditClick: this.handleSubmitEdition,\n      handlerDoneClick: this.handleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    taskList: state.taskList.taskList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    //submitCreation: (value: string) => dispatch(submitCreation(value)),\n    submitEdition: value => dispatch(submitEdition(value)),\n    makeDone: value => dispatch(makeDone(value))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);","map":{"version":3,"sources":["C:\\Users\\MiniTower\\Documents\\Workspace\\TODOList+Score\\frontend\\src\\components\\TaskListWidget\\TaskListContainer.tsx"],"names":["React","connect","TaskListComponent","submitEdition","makeDone","addTask","editTask","findAllTasks2","uuid","TaskListContainer","Component","constructor","props","handleSubmitCreation","text","task","id","done","creationDateAndTime","creationTimestamp","desc","handleSubmitEdition","oldTask","taskList","find","e","newTask","handleDone","state","length","render","alert","mapStateToProps","mapDispatchToProps","dispatch","value"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAIA,SAEI;AACAC,aAHJ,EAIIC,QAJJ,EAKIC,OALJ,EAMIC,QANJ,EAOIC,aAPJ,QAQO,iBARP;AASA,OAAOC,IAAP,MAAiB,MAAjB;;AAkBA,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAA8D;AAE1DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAQ1BC,oBAR0B,GAQFC,IAAD,IAAkB;AACrC;AACA,YAAMC,IAAe,GAAG;AACpBC,QAAAA,EAAE,EAAER,IAAI,EADY;AAEpBS,QAAAA,IAAI,EAAE,KAFc;AAGpBC,QAAAA,mBAAmB,EAAE,EAHD;AAIpBC,QAAAA,iBAAiB,EAAE,EAJC;AAKpBC,QAAAA,IAAI,EAAEN;AALc,OAAxB;AAOAT,MAAAA,OAAO,CAACU,IAAD,CAAP;AACH,KAlByB;;AAAA,SAoB1BM,mBApB0B,GAoBJ,CAACL,EAAD,EAAaF,IAAb,KAA8B;AAChD,YAAMQ,OAAO,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAAvC,CAAhB;;AAEA,UAAI,CAACM,OAAL,EAAc;AACV;AACH;;AAED,YAAMI,OAAkB,qBACjBJ,OADiB;AAEpBF,QAAAA,IAAI,EAAEN;AAFc,QAAxB;;AAIAR,MAAAA,QAAQ,CAACoB,OAAD,CAAR;AAEA;;;AAGH,KApCyB;;AAAA,SAsC1BC,UAtC0B,GAsCZX,EAAD,IAAgB;AACzB,YAAMM,OAAO,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAAvC,CAAhB;;AAEA,UAAI,CAACM,OAAL,EAAc;AACV;AACH;;AAED,YAAMI,OAAkB,qBACjBJ,OADiB;AAEpBL,QAAAA,IAAI,EAAE;AAFc,QAAxB;;AAIAX,MAAAA,QAAQ,CAACoB,OAAD,CAAR;AAEA;;;AAGH,KAtDyB;;AAGtB,SAAKE,KAAL,GAAa;AACTb,MAAAA,IAAI,EAAER,aAAa,CAACsB;AADX,KAAb;AAGH;;AAkDDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,KAAK,CAAC,KAAKH,KAAL,CAAWb,IAAZ,CAAL;AAEA,WACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AACI,MAAA,0BAA0B,EAAE,KAAKF,oBADrC;AAEI,MAAA,sBAAsB,EAAE,KAAKQ,mBAFjC;AAGI,MAAA,gBAAgB,EAAE,KAAKM,UAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AAtEyD;;AAyE9D,SAASK,eAAT,CAAyBJ,KAAzB,EAA2C;AACvC,SAAO;AACHL,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeA;AADtB,GAAP;AAGH;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAgF;AAC5E,SAAO;AACH;AACA/B,IAAAA,aAAa,EAAGgC,KAAD,IAAwBD,QAAQ,CAAC/B,aAAa,CAACgC,KAAD,CAAd,CAF5C;AAGH/B,IAAAA,QAAQ,EAAG+B,KAAD,IAAwBD,QAAQ,CAAC9B,QAAQ,CAAC+B,KAAD,CAAT;AAHvC,GAAP;AAKH;;AAED,eAAelC,OAAO,CAAC+B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxB,iBAA7C,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskListComponent from './components/TaskListComponent';\r\nimport { StateType } from '../../types';\r\nimport { Dispatch } from 'redux';\r\nimport { TaskModel } from '../../ApiModels';\r\nimport {\r\n    TaskListActions,\r\n    //submitCreation,\r\n    submitEdition,\r\n    makeDone,\r\n    addTask,\r\n    editTask,\r\n    findAllTasks2\r\n} from './TaskListLogic';\r\nimport uuid from 'uuid';\r\n\r\ninterface StateToProps {\r\n    taskList: TaskModel[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    //submitCreation(value: string): void;\r\n    submitEdition(value: TaskModel[]): void;\r\n    makeDone(value: TaskModel[]): void;\r\n}\r\n\r\ninterface State {\r\n    task: number;\r\n}\r\n\r\ntype Props = StateToProps & DispatchProps;\r\n\r\nclass TaskListContainer extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task: findAllTasks2.length\r\n        }\r\n    }\r\n\r\n    handleSubmitCreation = (text: string) => {\r\n        //this.props.submitCreation(text);\r\n        const task: TaskModel = {\r\n            id: uuid(),\r\n            done: false,\r\n            creationDateAndTime: '',\r\n            creationTimestamp: '',\r\n            desc: text\r\n        }\r\n        addTask(task);\r\n    }\r\n\r\n    handleSubmitEdition = (id: string, text: string) => {\r\n        const oldTask = this.props.taskList.find(e => e.id === id);\r\n\r\n        if (!oldTask) {\r\n            return;\r\n        }\r\n\r\n        const newTask: TaskModel = {\r\n            ...oldTask,\r\n            desc: text\r\n        }\r\n        editTask(newTask);\r\n\r\n        /*const taskListEdited = [...this.props.taskList];\r\n        taskListEdited[index].desc = text;\r\n        this.props.submitEdition(taskListEdited);*/\r\n    }\r\n\r\n    handleDone = (id: string) => {\r\n        const oldTask = this.props.taskList.find(e => e.id === id);\r\n\r\n        if (!oldTask) {\r\n            return;\r\n        }\r\n\r\n        const newTask: TaskModel = {\r\n            ...oldTask,\r\n            done: true\r\n        }\r\n        editTask(newTask);\r\n\r\n        /*const taskListEdited = [...this.props.taskList];\r\n        taskListEdited[index].done = true\r\n        this.props.makeDone(taskListEdited);*/\r\n    }\r\n\r\n    render() {\r\n        alert(this.state.task);\r\n\r\n        return (\r\n            <div className={'task-list-component'}>\r\n                <TaskListComponent\r\n                    handlerSubmitCreationClick={this.handleSubmitCreation}\r\n                    handlerSubmitEditClick={this.handleSubmitEdition}\r\n                    handlerDoneClick={this.handleDone}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateType) {\r\n    return {\r\n        taskList: state.taskList.taskList\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<TaskListActions>): DispatchProps {\r\n    return {\r\n        //submitCreation: (value: string) => dispatch(submitCreation(value)),\r\n        submitEdition: (value: TaskModel[]) => dispatch(submitEdition(value)),\r\n        makeDone: (value: TaskModel[]) => dispatch(makeDone(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);"]},"metadata":{},"sourceType":"module"}