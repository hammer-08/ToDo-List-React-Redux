{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\globals.ts\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\ApiFetch.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\TaskListLogic.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\components\\\\TaskListRow.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\components\\\\TaskListNewRow.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\components\\\\TaskListComponent.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\components\\\\TaskListWidget\\\\TaskListContainer.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\index.tsx\",\"C:\\\\Users\\\\MiniTower\\\\Documents\\\\Workspace\\\\TODOList+Score\\\\frontend\\\\src\\\\serviceWorker.tsx\"],\"names\":[\"anyWindow\",\"window\",\"apiPost\",\"input\",\"data\",\"apiFetch\",\"method\",\"body\",\"JSON\",\"stringify\",\"init\",\"headers\",\"Headers\",\"_\",\"Content-type\",\"Accept\",\"fetch\",\"then\",\"response\",\"ok\",\"status\",\"json\",\"Promise\",\"reject\",\"message\",\"exceptionName\",\"statusCode\",\"catch\",\"error\",\"location\",\"replace\",\"store\",\"applicationStore\",\"dispatch\",\"Notifications\",\"title\",\"position\",\"autoDismiss\",\"taskListState\",\"taskList\",\"_callee2\",\"request\",\"regenerator_default\",\"a\",\"wrap\",\"_context2\",\"prev\",\"next\",\"sent\",\"abrupt\",\"stop\",\"editTask\",\"_x2\",\"_editTask\",\"apply\",\"this\",\"arguments\",\"_callee3\",\"_context3\",\"findAllTasks2\",\"_findAllTasks2\",\"_callee5\",\"_context5\",\"TaskListRow\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handlerDescChange\",\"e\",\"setState\",\"desc\",\"handlerSubmitEditClick\",\"id\",\"text\",\"handlerCancelEditClick\",\"state\",\"_this2\",\"react\",\"className\",\"value\",\"onChange\",\"target\",\"onClick\",\"done\",\"handlerDoneClick\",\"React\",\"TaskListNewRow\",\"handlerSubmitCreationClick\",\"handlerCancelCreationClick\",\"TaskListComponent\",\"showNewRow\",\"hideNewRow\",\"handleCancelCreation\",\"handleSubmitCreation\",\"TaskListNewRow_TaskListNewRow\",\"map\",\"index\",\"TaskListRow_TaskListRow\",\"key\",\"connect\",\"TaskListContainer\",\"_x\",\"_addTask\",\"addTask\",\"uuid\",\"creationDateAndTime\",\"creationTimestamp\",\"handleSubmitEdition\",\"oldTask\",\"find\",\"objectSpread\",\"handleDone\",\"task\",\"length\",\"alert\",\"TaskListWidget_components_TaskListComponent\",\"submitEdition\",\"type\",\"makeDone\",\"__webpack_require__\",\"d\",\"__webpack_exports__\",\"initialState\",\"reducer\",\"combineReducers\",\"undefined\",\"action\",\"concat\",\"toConsumableArray\",\"createStore\",\"composeWithDevTools\",\"ReactDOM\",\"es\",\"TaskListWidget_TaskListContainer\",\"document\",\"getElementById\",\"navigator\",\"addEventListener\",\"swUrl\",\"process\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\"],\"mappings\":\"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\",\"sourcesContent\":[\"interface AnyWindow extends Window {\\r\\n    [extraProps: string]: any;\\r\\n  }\\r\\n  \\r\\n  export const anyWindow = window as AnyWindow;\",\"import * as _ from 'lodash';\\r\\nimport { ErrorDto } from './ApiModels';\\r\\nimport { Store, Action } from 'redux';\\r\\nimport * as Notifications from 'react-notification-system-redux';\\r\\nimport { StateType } from './types';\\r\\nimport { anyWindow } from './globals';\\r\\n\\r\\nexport function apiPost(input: RequestInfo, data: {}) {\\r\\n    return apiFetch(input, {\\r\\n        method: 'POST',\\r\\n        body: JSON.stringify(data)\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function apiFetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response> {\\r\\n    const defaultHeaders: _.Dictionary<string> = {\\r\\n        'Content-type': 'application/json; charset=UTF-8',\\r\\n        'Accept': 'application/json'\\r\\n    };\\r\\n\\r\\n    if (!init) {\\r\\n        init = {};\\r\\n    }\\r\\n\\r\\n    if (!init.headers) {\\r\\n        init.headers = new Headers();\\r\\n    }\\r\\n\\r\\n    init.headers = _.assign(defaultHeaders, init.headers);\\r\\n\\r\\n    return fetch(input, init)\\r\\n        .then(response => {\\r\\n            if (response.ok) {\\r\\n                return response;\\r\\n            } else if (response.status === 400) {\\r\\n                return response.json().then((json) => Promise.reject<Response>(json));\\r\\n            } else if (response.status === 404) {\\r\\n                return Promise.reject<Response>({\\r\\n                    message: 'Object not found',\\r\\n                    exceptionName: '',\\r\\n                    statusCode: 404\\r\\n                });\\r\\n            } else if (response.status === 403) {\\r\\n                return Promise.reject<Response>({\\r\\n                    message: 'Access is denied',\\r\\n                    exceptionName: '',\\r\\n                    statusCode: 403\\r\\n                });\\r\\n            } else if (response.status === 401) {\\r\\n                return Promise.reject<Response>({\\r\\n                    message: 'User is not authenticated',\\r\\n                    exceptionName: '',\\r\\n                    statusCode: 401\\r\\n                });\\r\\n            }\\r\\n\\r\\n            return Promise.reject<Response>({\\r\\n                message: 'Unknown network error',\\r\\n                exceptionName: '',\\r\\n                statusCode: response.status\\r\\n            });\\r\\n        })\\r\\n        .catch((error: ErrorDto) => {\\r\\n            if (error.statusCode === 401) {\\r\\n                window.location.replace('#/logout');\\r\\n            } else if (error.statusCode === 403) {\\r\\n                window.location.replace('#/');\\r\\n            } else {\\r\\n                const store: Store<StateType> = anyWindow.applicationStore;\\r\\n\\r\\n                if (store) {\\r\\n                    store.dispatch(createErrorNotification(error.message));\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return Promise.reject<Response>(error);\\r\\n        });\\r\\n\\r\\n    function createErrorNotification(message: string): Action {\\r\\n        return Notifications.error({\\r\\n            title: 'An error occurred on the server',\\r\\n            message: message,\\r\\n            position: 'tr',\\r\\n            autoDismiss: 0\\r\\n        });\\r\\n    }\\r\\n\\r\\n}\",\"import { Act } from '../../types';\\r\\nimport { TaskModel } from '../../ApiModels';\\r\\nimport { apiFetch, apiPost } from '../../ApiFetch';\\r\\n\\r\\nexport interface TaskListState {\\r\\n    taskList: TaskModel[];\\r\\n}\\r\\n\\r\\nexport const taskListState: TaskListState = {\\r\\n    taskList: []\\r\\n};\\r\\n\\r\\n/*export function submitCreation(value: string): TaskListActions {\\r\\n    return { type: 'TASK_LIST/SUBMIT_CREATION', value: { value } };\\r\\n}*/\\r\\n\\r\\nexport function submitEdition(value: TaskModel[]): TaskListActions {\\r\\n    return { type: 'TASK_LIST/SUBMIT_EDITION', value: { value } };\\r\\n}\\r\\n\\r\\nexport function makeDone(value: TaskModel[]): TaskListActions {\\r\\n    return { type: 'TASK_LIST/MAKE_DONE', value: { value } };\\r\\n}\\r\\n\\r\\nexport type TaskListActions = Act<'TASK_LIST/SUBMIT_CREATION', { value: TaskModel }> |\\r\\n    Act<'TASK_LIST/MAKE_DONE', { value: TaskModel[] }> | Act<'TASK_LIST/SUBMIT_EDITION', { value: TaskModel[] }>;\\r\\n\\r\\nexport function taskListReducer(\\r\\n    state: TaskListState = taskListState,\\r\\n    action: TaskListActions): TaskListState {\\r\\n    switch (action.type) {\\r\\n        case 'TASK_LIST/SUBMIT_CREATION': return {\\r\\n            ...state,\\r\\n            taskList: state.taskList.concat(action.value.value)\\r\\n        };\\r\\n        case 'TASK_LIST/MAKE_DONE': return {\\r\\n            ...state,\\r\\n            taskList: [...action.value.value]\\r\\n        };\\r\\n        case 'TASK_LIST/SUBMIT_EDITION': return {\\r\\n            ...state,\\r\\n            taskList: [...action.value.value]\\r\\n        }\\r\\n        default: return state;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport async function findAllTasks(): Promise<string> {\\r\\n    const response = await apiFetch('/findAllTasks');\\r\\n    return await response.json();\\r\\n}\\r\\n\\r\\nexport async function addTask(request: TaskModel): Promise<String> {\\r\\n    const response = await apiPost('/addTask', request);\\r\\n    return await response.json();\\r\\n}\\r\\n\\r\\nexport async function editTask(request: TaskModel): Promise<string> {\\r\\n    const response = await apiPost('/editTask', request);\\r\\n    return await response.json();\\r\\n}\\r\\n\\r\\nexport async function deleteTask(taskId: string): Promise<string> {\\r\\n    const response = await apiPost('/deleteTask', taskId);\\r\\n    return await response.json();\\r\\n}\\r\\n\\r\\nexport async function findAllTasks2(): Promise<string> {\\r\\n    const response = await apiFetch('/api/rest');\\r\\n    return await response.json();\\r\\n}\",\"import * as React from 'react';\\r\\nimport './TaskListComponent.css';\\r\\n\\r\\ninterface OwnProps {\\r\\n    key: number;\\r\\n    desc: string;\\r\\n    done: boolean;\\r\\n    id: string;\\r\\n    handlerSubmitEditClick(id: string, desc: string): void;\\r\\n    handlerDoneClick(id: string): void;\\r\\n}\\r\\n\\r\\ninterface State {\\r\\n    desc: string;\\r\\n    editTask: boolean;\\r\\n}\\r\\n\\r\\ntype Props = OwnProps;\\r\\n\\r\\nexport default class TaskListRow extends React.Component<Props, State> {\\r\\n    constructor(props: Props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            desc: this.props.desc,\\r\\n            editTask: false\\r\\n        }\\r\\n    }\\r\\n\\r\\n    handlerDescChange = (e: string) => {\\r\\n        this.setState({ desc: e })\\r\\n    }\\r\\n\\r\\n    handlerSubmitEditClick = (id: string, text: string) => {\\r\\n        this.setState({ editTask: false });\\r\\n        this.props.handlerSubmitEditClick(id, text);\\r\\n    }\\r\\n\\r\\n    handlerCancelEditClick = () => {\\r\\n        this.setState({ editTask: false });\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className={'row'}>\\r\\n                {this.state.editTask\\r\\n                    ? <div className={'edit-row'}>\\r\\n                        <input\\r\\n                            value={this.state.desc}\\r\\n                            onChange={(e) => this.handlerDescChange(e.target.value)}\\r\\n                        />\\r\\n                        <button\\r\\n                            onClick={() => this.handlerSubmitEditClick(this.props.id, this.state.desc)}\\r\\n                        >\\r\\n                            Submit\\r\\n                    </button>\\r\\n                        <button\\r\\n                            onClick={this.handlerCancelEditClick}\\r\\n                        >\\r\\n                            Cancel\\r\\n                    </button>\\r\\n                    </div>\\r\\n                    : <div>\\r\\n                        <span>{this.props.desc}</span>\\r\\n                        {this.props.done && <span> - OK </span>}\\r\\n                        {!this.props.done &&\\r\\n                            <span>\\r\\n                                <button\\r\\n                                    onClick={() => this.setState({ editTask: true, desc: this.props.desc })}>\\r\\n                                    Edit\\r\\n                    </button>\\r\\n                                <button\\r\\n                                    onClick={() => this.props.handlerDoneClick(this.props.id)}\\r\\n                                >\\r\\n                                    Done\\r\\n                    </button>\\r\\n                            </span>}\\r\\n                    </div>}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\",\"import * as React from 'react';\\r\\n\\r\\ninterface State {\\r\\n    desc: string;\\r\\n}\\r\\n\\r\\ninterface OwnProps {\\r\\n    handlerSubmitCreationClick(value: string): void;\\r\\n    handlerCancelCreationClick(): void;\\r\\n}\\r\\n\\r\\ntype Props = OwnProps;\\r\\n\\r\\nexport default class TaskListNewRow extends React.Component<Props, State> {\\r\\n    constructor(props: Props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            desc: ''\\r\\n        };\\r\\n    }\\r\\n\\r\\n    handlerDescChange = (e: string) => {\\r\\n        this.setState({ desc: e })\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className={'edit-row'}>\\r\\n                <input\\r\\n                    value={this.state.desc}\\r\\n                    onChange={(e) => this.handlerDescChange(e.target.value)}\\r\\n                />\\r\\n                <button\\r\\n                    onClick={() => this.props.handlerSubmitCreationClick(this.state.desc)}\\r\\n                >\\r\\n                    Create\\r\\n            </button>\\r\\n                <button\\r\\n                    onClick={this.props.handlerCancelCreationClick}\\r\\n                >\\r\\n                    Cancel\\r\\n            </button>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"import * as React from 'react';\\r\\nimport TaskListRow from './TaskListRow';\\r\\nimport TaskListNewRow from './TaskListNewRow';\\r\\nimport { StateType } from '../../../types';\\r\\nimport { connect } from 'react-redux';\\r\\nimport { TaskModel } from '../../../ApiModels';\\r\\nimport './TaskListComponent.css';\\r\\n\\r\\ninterface OwnProps {\\r\\n    handlerSubmitEditClick(id: string, desc: string): void;\\r\\n    handlerDoneClick(id: string): void;\\r\\n    handlerSubmitCreationClick(value: string): void;\\r\\n}\\r\\n\\r\\ninterface State {\\r\\n    showNewRow: boolean;\\r\\n}\\r\\n\\r\\ninterface StateToProps {\\r\\n    taskList: TaskModel[];\\r\\n}\\r\\n\\r\\ntype Props = OwnProps & StateToProps;\\r\\n\\r\\nclass TaskListComponent extends React.Component<Props, State> {\\r\\n\\r\\n    constructor(props: Props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            showNewRow: false\\r\\n        }\\r\\n    }\\r\\n\\r\\n    showNewRow = () => {\\r\\n        this.setState({ showNewRow: true });\\r\\n    }\\r\\n\\r\\n    hideNewRow = () => {\\r\\n        this.setState({ showNewRow: false });\\r\\n    }\\r\\n\\r\\n    handleCancelCreation = () => {\\r\\n        this.hideNewRow();\\r\\n    }\\r\\n\\r\\n    handleSubmitCreation = (value: string) => {\\r\\n        this.hideNewRow();\\r\\n        this.props.handlerSubmitCreationClick(value);\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className={'task-list'}>\\r\\n                <button\\r\\n                    className={'btn add-new-task'}\\r\\n                    onClick={this.showNewRow}\\r\\n                >\\r\\n                    <span className={'glyphicon glyphicon-plus'}></span>\\r\\n                    Add new task\\r\\n                </button>\\r\\n                <div className={'task-list list'}>\\r\\n                    {this.state.showNewRow &&\\r\\n                        <TaskListNewRow\\r\\n                            handlerSubmitCreationClick={this.handleSubmitCreation}\\r\\n                            handlerCancelCreationClick={this.handleCancelCreation}\\r\\n                        />\\r\\n                    }\\r\\n                    <span className={'task-list list element'}>\\r\\n                        {\\r\\n                            this.props.taskList.map((e, index) => {\\r\\n                                return (\\r\\n                                    <TaskListRow\\r\\n                                        key={index}\\r\\n                                        desc={e.desc}\\r\\n                                        done={e.done}\\r\\n                                        id={e.id}\\r\\n                                        handlerSubmitEditClick={this.props.handlerSubmitEditClick}\\r\\n                                        handlerDoneClick={this.props.handlerDoneClick}\\r\\n                                    />\\r\\n                                );\\r\\n                            })\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction mapStateToProps(state: StateType) {\\r\\n    return {\\r\\n        taskList: state.taskList.taskList\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default connect(mapStateToProps)(TaskListComponent);\",\"import * as React from 'react';\\r\\nimport { connect } from 'react-redux';\\r\\nimport TaskListComponent from './components/TaskListComponent';\\r\\nimport { StateType } from '../../types';\\r\\nimport { Dispatch } from 'redux';\\r\\nimport { TaskModel } from '../../ApiModels';\\r\\nimport {\\r\\n    TaskListActions,\\r\\n    //submitCreation,\\r\\n    submitEdition,\\r\\n    makeDone,\\r\\n    addTask,\\r\\n    editTask,\\r\\n    findAllTasks2\\r\\n} from './TaskListLogic';\\r\\nimport uuid from 'uuid';\\r\\n\\r\\ninterface StateToProps {\\r\\n    taskList: TaskModel[];\\r\\n}\\r\\n\\r\\ninterface DispatchProps {\\r\\n    //submitCreation(value: string): void;\\r\\n    submitEdition(value: TaskModel[]): void;\\r\\n    makeDone(value: TaskModel[]): void;\\r\\n}\\r\\n\\r\\ninterface State {\\r\\n    task: number;\\r\\n}\\r\\n\\r\\ntype Props = StateToProps & DispatchProps;\\r\\n\\r\\nclass TaskListContainer extends React.Component<Props, State> {\\r\\n\\r\\n    constructor(props: Props) {\\r\\n        super(props);\\r\\n\\r\\n        this.state = {\\r\\n            task: findAllTasks2.length\\r\\n        }\\r\\n    }\\r\\n\\r\\n    handleSubmitCreation = (text: string) => {\\r\\n        //this.props.submitCreation(text);\\r\\n        const task: TaskModel = {\\r\\n            id: uuid(),\\r\\n            done: false,\\r\\n            creationDateAndTime: '',\\r\\n            creationTimestamp: '',\\r\\n            desc: text\\r\\n        }\\r\\n        addTask(task);\\r\\n    }\\r\\n\\r\\n    handleSubmitEdition = (id: string, text: string) => {\\r\\n        const oldTask = this.props.taskList.find(e => e.id === id);\\r\\n\\r\\n        if (!oldTask) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const newTask: TaskModel = {\\r\\n            ...oldTask,\\r\\n            desc: text\\r\\n        }\\r\\n        editTask(newTask);\\r\\n\\r\\n        /*const taskListEdited = [...this.props.taskList];\\r\\n        taskListEdited[index].desc = text;\\r\\n        this.props.submitEdition(taskListEdited);*/\\r\\n    }\\r\\n\\r\\n    handleDone = (id: string) => {\\r\\n        const oldTask = this.props.taskList.find(e => e.id === id);\\r\\n\\r\\n        if (!oldTask) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const newTask: TaskModel = {\\r\\n            ...oldTask,\\r\\n            done: true\\r\\n        }\\r\\n        editTask(newTask);\\r\\n\\r\\n        /*const taskListEdited = [...this.props.taskList];\\r\\n        taskListEdited[index].done = true\\r\\n        this.props.makeDone(taskListEdited);*/\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        alert(this.state.task);\\r\\n\\r\\n        return (\\r\\n            <div className={'task-list-component'}>\\r\\n                <TaskListComponent\\r\\n                    handlerSubmitCreationClick={this.handleSubmitCreation}\\r\\n                    handlerSubmitEditClick={this.handleSubmitEdition}\\r\\n                    handlerDoneClick={this.handleDone}\\r\\n                />\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction mapStateToProps(state: StateType) {\\r\\n    return {\\r\\n        taskList: state.taskList.taskList\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction mapDispatchToProps(dispatch: Dispatch<TaskListActions>): DispatchProps {\\r\\n    return {\\r\\n        //submitCreation: (value: string) => dispatch(submitCreation(value)),\\r\\n        submitEdition: (value: TaskModel[]) => dispatch(submitEdition(value)),\\r\\n        makeDone: (value: TaskModel[]) => dispatch(makeDone(value))\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListContainer);\",\"import * as React from 'react';\\nimport * as ReactDOM from 'react-dom';\\nimport './index.css';\\nimport { composeWithDevTools } from 'redux-devtools-extension';\\nimport { combineReducers, createStore } from 'redux';\\nimport { StateType } from './types';\\nimport { taskListReducer, taskListState } from './components/TaskListWidget/TaskListLogic';\\nimport register from './serviceWorker';\\nimport TaskListContainer from './components/TaskListWidget/TaskListContainer';\\nimport { Provider } from 'react-redux'\\n\\nconst reducer = combineReducers<StateType>({\\n    taskList: taskListReducer\\n});\\n\\nexport const initialState: StateType = {\\n    taskList: taskListState\\n}\\n\\nconst store = createStore(\\n    reducer,\\n    composeWithDevTools()\\n);\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <TaskListContainer />\\n    </Provider>\\n    , document.getElementById('root'));\\n\\nregister();\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n      navigator.serviceWorker\\n        .register(swUrl)\\n        .then(registration => {\\n          registration.onupdatefound = () => {\\n            const installingWorker = registration.installing;\\n            if (!installingWorker) {\\n              return;\\n            }\\n\\n            installingWorker.onstatechange = () => {\\n              if (installingWorker.state === 'installed') {\\n                if (navigator.serviceWorker.controller) {\\n                  console.log('New content is available; please refresh.');\\n                } else {\\n                  console.log('Content is cached for offline use.')\\n                }\\n              }\\n            };\\n          };\\n        })\\n        .catch(error => {\\n          console.error('Error during service worker registration:', error);\\n        });\\n    });\\n  }\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{23:function(e,t,n){},31:function(e,t,n){e.exports=n(55)},36:function(e,t,n){},55:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n(14),s=(n(36),n(26)),i=n(11),c=n(2),o=n.n(c),u=n(12),l=n(21),d=n(10),h=n(28),p=n(29),m=window;function f(e,t){return k(e,{method:\"POST\",body:JSON.stringify(t)})}function k(e,t){return t||(t={}),t.headers||(t.headers=new Headers),t.headers=h.assign({\"Content-type\":\"application/json; charset=UTF-8\",Accept:\"application/json\"},t.headers),fetch(e,t).then(function(e){return e.ok?e:400===e.status?e.json().then(function(e){return Promise.reject(e)}):404===e.status?Promise.reject({message:\"Object not found\",exceptionName:\"\",statusCode:404}):403===e.status?Promise.reject({message:\"Access is denied\",exceptionName:\"\",statusCode:403}):401===e.status?Promise.reject({message:\"User is not authenticated\",exceptionName:\"\",statusCode:401}):Promise.reject({message:\"Unknown network error\",exceptionName:\"\",statusCode:e.status})}).catch(function(e){if(401===e.statusCode)window.location.replace(\"#/logout\");else if(403===e.statusCode)window.location.replace(\"#/\");else{var t=m.applicationStore;t&&t.dispatch((n=e.message,p.error({title:\"An error occurred on the server\",message:n,position:\"tr\",autoDismiss:0})))}var n;return Promise.reject(e)})}var b={taskList:[]};function C(){return(C=Object(u.a)(o.a.mark(function e(t){var n;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f(\"/addTask\",t);case 2:return n=e.sent,e.next=5,n.json();case 5:return e.abrupt(\"return\",e.sent);case 6:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}function v(e){return w.apply(this,arguments)}function w(){return(w=Object(u.a)(o.a.mark(function e(t){var n;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f(\"/editTask\",t);case 2:return n=e.sent,e.next=5,n.json();case 5:return e.abrupt(\"return\",e.sent);case 6:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}function E(){return j.apply(this,arguments)}function j(){return(j=Object(u.a)(o.a.mark(function e(){var t;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k(\"/api/rest\");case 2:return t=e.sent,e.next=5,t.json();case 5:return e.abrupt(\"return\",e.sent);case 6:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}var O=n(4),S=n(5),g=n(7),N=n(6),T=n(8),L=n(9),y=(n(23),function(e){function t(e){var n;return Object(O.a)(this,t),(n=Object(g.a)(this,Object(N.a)(t).call(this,e))).handlerDescChange=function(e){n.setState({desc:e})},n.handlerSubmitEditClick=function(e,t){n.setState({editTask:!1}),n.props.handlerSubmitEditClick(e,t)},n.handlerCancelEditClick=function(){n.setState({editTask:!1})},n.state={desc:n.props.desc,editTask:!1},n}return Object(T.a)(t,e),Object(S.a)(t,[{key:\"render\",value:function(){var e=this;return a.createElement(\"div\",{className:\"row\"},this.state.editTask?a.createElement(\"div\",{className:\"edit-row\"},a.createElement(\"input\",{value:this.state.desc,onChange:function(t){return e.handlerDescChange(t.target.value)}}),a.createElement(\"button\",{onClick:function(){return e.handlerSubmitEditClick(e.props.id,e.state.desc)}},\"Submit\"),a.createElement(\"button\",{onClick:this.handlerCancelEditClick},\"Cancel\")):a.createElement(\"div\",null,a.createElement(\"span\",null,this.props.desc),this.props.done&&a.createElement(\"span\",null,\" - OK \"),!this.props.done&&a.createElement(\"span\",null,a.createElement(\"button\",{onClick:function(){return e.setState({editTask:!0,desc:e.props.desc})}},\"Edit\"),a.createElement(\"button\",{onClick:function(){return e.props.handlerDoneClick(e.props.id)}},\"Done\"))))}}]),t}(a.Component)),D=function(e){function t(e){var n;return Object(O.a)(this,t),(n=Object(g.a)(this,Object(N.a)(t).call(this,e))).handlerDescChange=function(e){n.setState({desc:e})},n.state={desc:\"\"},n}return Object(T.a)(t,e),Object(S.a)(t,[{key:\"render\",value:function(){var e=this;return a.createElement(\"div\",{className:\"edit-row\"},a.createElement(\"input\",{value:this.state.desc,onChange:function(t){return e.handlerDescChange(t.target.value)}}),a.createElement(\"button\",{onClick:function(){return e.props.handlerSubmitCreationClick(e.state.desc)}},\"Create\"),a.createElement(\"button\",{onClick:this.props.handlerCancelCreationClick},\"Cancel\"))}}]),t}(a.Component),x=function(e){function t(e){var n;return Object(O.a)(this,t),(n=Object(g.a)(this,Object(N.a)(t).call(this,e))).showNewRow=function(){n.setState({showNewRow:!0})},n.hideNewRow=function(){n.setState({showNewRow:!1})},n.handleCancelCreation=function(){n.hideNewRow()},n.handleSubmitCreation=function(e){n.hideNewRow(),n.props.handlerSubmitCreationClick(e)},n.state={showNewRow:!1},n}return Object(T.a)(t,e),Object(S.a)(t,[{key:\"render\",value:function(){var e=this;return a.createElement(\"div\",{className:\"task-list\"},a.createElement(\"button\",{className:\"btn add-new-task\",onClick:this.showNewRow},a.createElement(\"span\",{className:\"glyphicon glyphicon-plus\"}),\"Add new task\"),a.createElement(\"div\",{className:\"task-list list\"},this.state.showNewRow&&a.createElement(D,{handlerSubmitCreationClick:this.handleSubmitCreation,handlerCancelCreationClick:this.handleCancelCreation}),a.createElement(\"span\",{className:\"task-list list element\"},this.props.taskList.map(function(t,n){return a.createElement(y,{key:n,desc:t.desc,done:t.done,id:t.id,handlerSubmitEditClick:e.props.handlerSubmitEditClick,handlerDoneClick:e.props.handlerDoneClick})}))))}}]),t}(a.Component);var I=Object(L.connect)(function(e){return{taskList:e.taskList.taskList}})(x),A=n(30),R=n.n(A),_=function(e){function t(e){var n;return Object(O.a)(this,t),(n=Object(g.a)(this,Object(N.a)(t).call(this,e))).handleSubmitCreation=function(e){!function(e){C.apply(this,arguments)}({id:R()(),done:!1,creationDateAndTime:\"\",creationTimestamp:\"\",desc:e})},n.handleSubmitEdition=function(e,t){var a=n.props.taskList.find(function(t){return t.id===e});a&&v(Object(d.a)({},a,{desc:t}))},n.handleDone=function(e){var t=n.props.taskList.find(function(t){return t.id===e});t&&v(Object(d.a)({},t,{done:!0}))},n.state={task:E.length},n}return Object(T.a)(t,e),Object(S.a)(t,[{key:\"render\",value:function(){return alert(this.state.task),a.createElement(\"div\",{className:\"task-list-component\"},a.createElement(I,{handlerSubmitCreationClick:this.handleSubmitCreation,handlerSubmitEditClick:this.handleSubmitEdition,handlerDoneClick:this.handleDone}))}}]),t}(a.Component);var K=Object(L.connect)(function(e){return{taskList:e.taskList.taskList}},function(e){return{submitEdition:function(t){return e(function(e){return{type:\"TASK_LIST/SUBMIT_EDITION\",value:{value:e}}}(t))},makeDone:function(t){return e(function(e){return{type:\"TASK_LIST/MAKE_DONE\",value:{value:e}}}(t))}}})(_);n.d(t,\"initialState\",function(){return U});var P=Object(i.combineReducers)({taskList:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"TASK_LIST/SUBMIT_CREATION\":return Object(d.a)({},e,{taskList:e.taskList.concat(t.value.value)});case\"TASK_LIST/MAKE_DONE\":case\"TASK_LIST/SUBMIT_EDITION\":return Object(d.a)({},e,{taskList:Object(l.a)(t.value.value)});default:return e}}}),U={taskList:b},M=Object(i.createStore)(P,Object(s.composeWithDevTools)());r.render(a.createElement(L.Provider,{store:M},a.createElement(K,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t&&(t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})})}},[[31,1,2]]]);","extractedComments":[]}